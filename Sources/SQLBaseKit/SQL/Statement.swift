public protocol Statement {

  func addBatch(sql: String) throws
  func cancel() throws
  func clearBatch() throws
  func clearWarnings() throws
  func close() throws
  func closeOnCompletion() throws

  func isClosed() throws -> Bool
  func isCloseOnCompletion() throws -> Bool
  func isPoolable() throws -> Bool

  func execute(sql: String) throws -> Bool
  func execute(sql: String, autoGeneratedKeys: Int) throws -> Bool
  func execute(sql: String, columnIndexes: [Int]) throws -> Bool
  func execute(sql: String, columnNames: [String]) throws -> Bool

  func executeQuery(sql: String) throws -> ResultSet?
  func executeUpdate(sql: String) throws -> Int?
  func executeUpdate(sql: String, autoGeneratedKeys: Int) throws -> Int?
  func executeUpdate(sql: String, columnIndexes: [Int]) throws -> Int?
  func executeUpdate(sql: String, columnNames: [String]) throws -> Int?

  func getConnection() throws -> Connection?
  func getGeneratedKeys() throws -> ResultSet?
  func getResultSet() throws -> ResultSet?
  func getResultSetType() throws -> Int?
  func getUpdateCount() throws -> Int?

  func setFetchDirection(direction: Int) throws
  func setFetchSize(rows: Int) throws
  func setMaxRows(max: Int) throws
  func setPoolable(poolable: Bool) throws
  func setQueryTimeout(seconds: Int) throws

}
